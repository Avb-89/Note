Убрать 'Operation not permitted'
sudo find / -name tmux 2>&1 | grep -v 'Operation not permitted'
sudo find / -name tmux 2>&1 | grep -v 'find' (это удобнее)

Синтаксис:

	$ grep [опции] шаблон [/путь/к/файлу/или/папке...]
Или:
	$ команда | grep [опции] шаблон
	
=========================

Опции:

-E, --extended-regexp - включить расширенный режим регулярных выражений (ERE);
-F, --fixed-strings - рассматривать шаблон поиска как обычную строку, а не регулярное выражение;
-G, --basic-regexp - интерпретировать шаблон поиска как базовое регулярное выражение (BRE);
-P, --perl-regexp - рассматривать шаблон поиска как регулярное выражение Perl;
-e, --regexp - альтернативный способ указать шаблон поиска, опцию можно использовать несколько раз, что позволяет указать несколько шаблонов для поиска файлов, содержащих один из них;
-f, --file - читать шаблон поиска из файла;
-i, --ignore-case - не учитывать регистр символов;
-v, --invert-match - вывести только те строки, в которых шаблон поиска не найден;
-w, --word-regexp - искать шаблон как слово, отделенное пробелами или другими знаками препинания;
-x, --line-regexp - искать шаблон как целую строку, от начала и до символа перевода строки;
-c - вывести количество найденных строк;
--color - включить цветной режим, доступные значения: never, always и auto;
-L, --files-without-match - выводить только имена файлов, будут выведены все файлы в которых выполняется поиск;
-l, --files-with-match - аналогично предыдущему, но будут выведены только файлы, в которых есть хотя бы одно вхождение;
-m, --max-count - остановить поиск после того как будет найдено указанное количество строк;
-o, --only-matching - отображать только совпавшую часть, вместо отображения всей строки;
-h, --no-filename - не выводить имя файла;
-q, --quiet - не выводить ничего;
-s, --no-messages - не выводить ошибки чтения файлов;
-A, --after-content - показать вхождение и n строк после него;
-B, --before-content - показать вхождение и n строк перед ним;
-C - показать n строк до и после вхождения;
-a, --text - обрабатывать двоичные файлы как текст;
--exclude - пропустить файлы имена которых соответствуют регулярному выражению;
--exclude-dir - пропустить все файлы в указанной директории;
-I - пропускать двоичные файлы;
--include - искать только в файлах, имена которых соответствуют регулярному выражению;
-r - рекурсивный поиск по всем подпапкам;
-R - рекурсивный поиск включая ссылки;


С помощью опций --include и --exclude вы можете фильтровать файлы, которые будут принимать участие в поиске. Например, для того чтобы выполнить поиск только по файлам с расширением .log в папке /var/log используйте такую команду:

	grep -r --include="*.log" "Kernel" /var/log
	А для того чтобы исключить все файлы с расширением .journal надо использовать опцию --exclude:
	grep -r --exclude="*.journal" "Kernel" /var/log

Для поиска несокльких слов можно набирать grep файл -E слово|слово2|слово3  - он найдет все слова которые мы указали

	$ grep -A4 "Error" /var/log/dmesg - Выведет строку с вхождением и 4 строчки после неё -B4 до нее -C2 2 строчки до и 2 после

grep также может выполнить поиск текста в нескольких файлах, размещённых в одном каталоге или подкаталогах

	$ grep -r "Kernel" /var/log

Папка с вашими файлами может содержать двоичные файлы, в которых поиск выполнять обычно не надо. Для того чтобы их пропускать используйте опцию -I:

	grep -rI "Kernel" /var/log

Некоторые файлы доступны только суперпользователю и для того чтобы выполнять по ним поиск вам нужно запускать grep с помощью sudo. Или же вы можете просто скрыть сообщения об ошибках чтения и пропускать такие файлы с помощью опции -s:
	
	grep -rIs "Kernel" /var/log
	
Вы можете указать grep выводить только имена файлов, в которых было хотя бы одно вхождение с помощью опции -l. Например, следующая команда выведет все имена файлов из каталога /var/log, при поиске по содержимому которых было обнаружено вхождение Kernel:

	grep -lr 'Kernel' /var/log/


Если у вас есть некий список часто используемых шаблонов, укажите его в файле и используйте флаг -f. Файл должен содержать по одному шаблону на строку.

        
	$ grep -f [pattern_file] [file_to_match]

    
В примере мы создали файл шаблонов pattern.txt с таким содержанием:
  
	$ cat pattern.txt
	This
	It
	$